{
    "swagger": "2.0",
    "info": {
        "description": "Server API for FilmLibrary Application",
        "title": "FilmLibrary API",
        "contact": {
            "name": "FilmLibrary API Support",
            "url": "https://t.me/Kosmatoff",
            "email": "dimka.komarov@bk.ru"
        },
        "version": "1.0.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/actor": {
            "get": {
                "description": "Get by actors array with film information.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get actors",
                "responses": {
                    "200": {
                        "description": "Array actor with film information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseActor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actors/add": {
            "post": {
                "description": "Add a new actor to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Add a new actor",
                "parameters": [
                    {
                        "description": "Movie details",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Actor ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actors/update": {
            "put": {
                "description": "Update actor to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Update actor",
                "parameters": [
                    {
                        "description": "Actor details",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateActor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update movie response",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateActor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Get sort movies use query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get sort movies",
                "parameters": [
                    {
                        "enum": [
                            "A",
                            "B",
                            "C"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "enumstring",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "integer",
                        "description": "int enums",
                        "name": "enumint",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1.1,
                            1.2,
                            1.3
                        ],
                        "type": "number",
                        "description": "int enums",
                        "name": "enumnumber",
                        "in": "query"
                    },
                    {
                        "maxLength": 10,
                        "minLength": 5,
                        "type": "string",
                        "description": "string valid",
                        "name": "string",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "description": "int valid",
                        "name": "int",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "A",
                        "description": "string default",
                        "name": "default",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "string",
                        "description": "string example",
                        "name": "example",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "string collection",
                        "name": "collection",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "x-example": "test",
                        "x-nullable": true,
                        "description": "string collection",
                        "name": "extensions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseMovie"
                            }
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movies/add": {
            "post": {
                "description": "Add a new movie to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Add a new movie",
                "parameters": [
                    {
                        "description": "Movie details",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMovie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movies/delete": {
            "delete": {
                "description": "Delete movie to the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "uint valid",
                        "name": "uint",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movies/search": {
            "get": {
                "description": "Search by actor name or movie title.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Search movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Actor name",
                        "name": "actor_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Movie title",
                        "name": "movie_title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array movie or null value",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseMovie"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movies/update": {
            "put": {
                "description": "Update movie to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie",
                "parameters": [
                    {
                        "description": "Movie details",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMovie"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update movie response",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMovie"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateActor": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "M",
                        "W"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateMovie": {
            "type": "object",
            "required": [
                "release_date",
                "title"
            ],
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "rating": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "models.MovieArr": {
            "type": "object",
            "properties": {
                "movie_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ResponseActor": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "integer"
                },
                "birth_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "movie": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MovieArr"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ResponseMovie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.UpdateActor": {
            "type": "object",
            "required": [
                "actor_id"
            ],
            "properties": {
                "actor_id": {
                    "type": "integer"
                },
                "birth_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "M",
                        "W",
                        "N"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateMovie": {
            "type": "object",
            "required": [
                "movie_id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "movie_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": -1
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150
                }
            }
        }
    }
}